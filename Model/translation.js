class translation{constructor(e,n){this.key=e,this.eng=n}}var translations=[],txt="";function reqListener(){txt=(txt=this.responseText).replace(/[\n\t]/g,""),ParseXml()}var oReq=new XMLHttpRequest;function ParseXml(){window.DOMParser?(parser=new DOMParser,xmlDoc=parser.parseFromString(txt,"text/xml")):(xmlDoc=new ActiveXObject("Microsoft.XMLDOM"),xmlDoc.async=!1,xmlDoc.loadXML(txt)),xmlDoc.documentElement.childNodes.forEach(e=>{if(null!=e.childNodes[0].innerHTML&&null!=e.childNodes[1].innerHTML){var n=new translation(e.childNodes[0].innerHTML,e.childNodes[1].innerHTML);translations.push(n)}})}function translateFromMyXml(e){if("eng"==e)for(var n=document.getElementsByTagName("iframe"),t=0;t<n.length;t++){var a=n[t].contentWindow.document.getElementsByClassName("translatable");for(let e=0;e<a.length;e++){var r=a[e].innerText;-1!=(s=translations.findIndex(e=>e.key==r))&&(a[e].innerHTML=translations[s].eng)}}else if("pl"==e)for(n=document.getElementsByTagName("iframe"),t=0;t<n.length;t++){a=n[t].contentWindow.document.getElementsByClassName("translatable");for(let e=0;e<a.length;e++){var s;r=a[e].innerText;-1!=(s=translations.findIndex(e=>e.eng==r))&&(a[e].innerHTML=translations[s].key)}}}oReq.addEventListener("load",reqListener),oReq.open("GET","https://aaaro.github.io/Model/translations.xml"),oReq.send();